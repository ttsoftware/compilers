\select@language {danish}
\contentsline {section}{\numberline {1}Grammar transformation for LL(1)}{3}{section.1}
\contentsline {subsection}{\numberline {1.1}(a)}{3}{subsection.1.1}
\contentsline {subsection}{\numberline {1.2}(b)}{3}{subsection.1.2}
\contentsline {subsection}{\numberline {1.3}(c)}{4}{subsection.1.3}
\contentsline {subsection}{\numberline {1.4}(d)}{5}{subsection.1.4}
\contentsline {section}{\numberline {2}Extend the equality operation in Paladim to work on arrays.}{6}{section.2}
\contentsline {subsection}{\numberline {2.1}Type-checker changes.}{6}{subsection.2.1}
\contentsline {subsection}{\numberline {2.2}Code generation.}{8}{subsection.2.2}
\contentsline {subsection}{\numberline {2.3}Testing.}{11}{subsection.2.3}
\contentsline {section}{\numberline {3}A Flat-Reduce High-Order Function in Paladim.}{12}{section.3}
\contentsline {subsection}{\numberline {3.1}Type-checker changes.}{12}{subsection.3.1}
\contentsline {subsection}{\numberline {3.2}Code generation.}{13}{subsection.3.2}
\contentsline {subsection}{\numberline {3.3}Testing.}{15}{subsection.3.3}
\contentsline {section}{\numberline {4}A switch statement for Paladim.}{16}{section.4}
\contentsline {subsubsection}{\numberline {4.0.1}Lexer, grammar and abstract syntax tree.}{16}{subsubsection.4.0.1}
\contentsline {subsubsection}{\numberline {4.0.2}Type checking.}{18}{subsubsection.4.0.2}
\contentsline {subsubsection}{\numberline {4.0.3}Code generation.}{19}{subsubsection.4.0.3}
\contentsline {subsection}{\numberline {4.1}Testing.}{20}{subsection.4.1}
\contentsline {section}{\numberline {A}Code changes}{21}{appendix.A}
\contentsline {subsection}{\numberline {A.1}Array equal implementation.}{21}{subsection.A.1}
\contentsline {subsubsection}{\numberline {A.1.1}Type.sml}{21}{subsubsection.A.1.1}
\contentsline {subsubsection}{\numberline {A.1.2}Compiler.sml}{22}{subsubsection.A.1.2}
\contentsline {subsection}{\numberline {A.2}Reduce function implementation}{25}{subsection.A.2}
\contentsline {subsubsection}{\numberline {A.2.1}Type.sml}{25}{subsubsection.A.2.1}
\contentsline {subsubsection}{\numberline {A.2.2}Compiler.sml}{26}{subsubsection.A.2.2}
\contentsline {subsection}{\numberline {A.3}Switch statement implementation.}{28}{subsection.A.3}
\contentsline {subsubsection}{\numberline {A.3.1}Lexer.lex}{28}{subsubsection.A.3.1}
\contentsline {subsubsection}{\numberline {A.3.2}Parser.grm}{28}{subsubsection.A.3.2}
\contentsline {subsubsection}{\numberline {A.3.3}AbSyn.sml}{28}{subsubsection.A.3.3}
\contentsline {subsubsection}{\numberline {A.3.4}TpAbSyn.sml}{29}{subsubsection.A.3.4}
\contentsline {subsubsection}{\numberline {A.3.5}Type.sml}{29}{subsubsection.A.3.5}
\contentsline {subsubsection}{\numberline {A.3.6}Compiler.sml}{30}{subsubsection.A.3.6}
\contentsline {subsubsection}{\numberline {A.3.7}TpInterpret.sml}{32}{subsubsection.A.3.7}
\contentsline {subsection}{\numberline {A.4}Tests}{33}{subsection.A.4}
\contentsline {subsubsection}{\numberline {A.4.1}Equal}{33}{subsubsection.A.4.1}
\contentsline {subsubsection}{\numberline {A.4.2}Reduce}{34}{subsubsection.A.4.2}
\contentsline {subsubsection}{\numberline {A.4.3}Switch}{35}{subsubsection.A.4.3}
